plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}


loom {
    forge {
        mixinConfigs = [
                "itemskills-common.mixins.json"
        ]
    }
}

repositories {
    maven { url "https://maven.theillusivec4.top/" }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    modImplementation "net.impleri:player-skills-${rootProject.minecraft_version}-forge:${rootProject.playerskills_version}"

    modRuntimeOnly "dev.latvian.mods:kubejs-forge:${rootProject.kubejs_version}"

    compileOnly "top.theillusivec4.curios:curios-forge:${rootProject.minecraft_version}-${rootProject.curios_version}:api"
    modRuntimeOnly "top.theillusivec4.curios:curios-forge:${rootProject.minecraft_version}-${rootProject.curios_version}"

    compileOnly "me.shedaniel:RoughlyEnoughItems-api-forge:${rootProject.rei_version}"
    compileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-forge:${rootProject.rei_version}"
    modImplementation "me.shedaniel:RoughlyEnoughItems-forge:${rootProject.rei_version}"


    compileOnly "mezz.jei:jei-${rootProject.minecraft_version}:${rootProject.jei_version}:api"
    modImplementation "mezz.jei:jei-${rootProject.minecraft_version}:${rootProject.jei_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", "$project.version"

    filesMatching("META-INF/mods.toml") {
        expand "version": "$project.version"
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }
}

unifiedPublishing {
    project {
        relations {
            optional {
                curseforge = "jei"
                modrinth = "jei"
            }

            optional {
                curseforge = "curios"
                modrinth = "curios"
            }
        }
    }
}
